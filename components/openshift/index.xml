<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>openshift on Walmo SDLC Test</title>
    <link>https://gwtharg.github.io/28mm/components/openshift/</link>
    <description>Recent content in openshift on Walmo SDLC Test</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Mon, 04 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://gwtharg.github.io/28mm/components/openshift/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Elements</title>
      <link>https://gwtharg.github.io/28mm/paas/elements/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/paas/elements/</guid>
      <description>Elements is where we store the difference parts of a request, an example of this is that a Redhat Virtual machine is an element of a build; by that we mean it is generally just a piece of a whole build and not the whole build itself and has creation and decommisioning scripts within its folder.
The layout of any element should follow this basic structure:
 src └── element_name ├── scripts │ ├── build.</description>
    </item>
    
    <item>
      <title>OpenShift Container Platform</title>
      <link>https://gwtharg.github.io/28mm/paas/openshift/</link>
      <pubDate>Tue, 07 Apr 2020 13:07:35 +0100</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/paas/openshift/</guid>
      <description>Openshift is a Platform as a Service (PaaS) technology from Redhat based on Docker and Kubernetes.
Openshift provides the ability to orchistrate docker containers, providing request routing, health checks and automated scaling amongst other things.
Architecture Openshift is made up of multiple components that together orchestrate containers and allow them to talk to one another. There are multiple PaaS&amp;rsquo; deployed within the bank each with it&amp;rsquo;s own purpose.
   PaaS Name Purpose     Non Production This PaaS is used for running the non production workloads, this will be where development and test purposes are deployed.</description>
    </item>
    
    <item>
      <title>Platform Engineering Background</title>
      <link>https://gwtharg.github.io/28mm/paas/pe_background/</link>
      <pubDate>Mon, 13 Apr 2020 17:36:16 +0100</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/paas/pe_background/</guid>
      <description>This is an embedded html page   &amp;nbsp;
Some Background When the Platform Engineering team was formed there were a number of different processes in place for requesting work from the team. These included:
Process/MethodType of requestREAP Process / EPM
Planned project requests - Low detail and uncertain timingsEmailsUnplanned requests
Service Requests
Incidents
OCSMS Teams / HipchatWalkupService NowService Requests
Incident Records
Problem Records
JiraPlanned Requests
Unplanned Requests
Incidents</description>
    </item>
    
    <item>
      <title>Paas</title>
      <link>https://gwtharg.github.io/28mm/paas/</link>
      <pubDate>Tue, 07 Apr 2020 13:04:31 +0100</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/paas/</guid>
      <description>Training Notes  Components OP   Caboodle   Composer Info   Docker Automation   Elements   Jenkins CI   Platform BOM   What is an API-Gateway   What is Docker?   OpenShift Container Platform   Platform Engineering Background   </description>
    </item>
    
  </channel>
</rss>