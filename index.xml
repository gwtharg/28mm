<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Auto-Doc on Walmo SDLC Test</title>
    <link>https://gwtharg.github.io/28mm/</link>
    <description>Recent content in Auto-Doc on Walmo SDLC Test</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Tue, 07 Apr 2020 13:04:31 +0100</lastBuildDate>
    
	<atom:link href="https://gwtharg.github.io/28mm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo Simple Install</title>
      <link>https://gwtharg.github.io/28mm/site_documentation/hugo_install/</link>
      <pubDate>Wed, 29 Apr 2020 10:24:29 +0100</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/site_documentation/hugo_install/</guid>
      <description>Install Hugo If you wish to try Hugo on your desktop then the simple instructions below will point you to a single install file.
The following note is from gohugo.io which has more information on Hugo.
 Install Hugo on macOS, Windows, Linux, OpenBSD, FreeBSD, and on any machine where the Go compiler tool chain can run.
 There is lots of talk about “Hugo being written in Go”, but you don’t need to install Go to enjoy Hugo.</description>
    </item>
    
    <item>
      <title>OpenShift Container Platform</title>
      <link>https://gwtharg.github.io/28mm/paas/openshift/</link>
      <pubDate>Tue, 07 Apr 2020 13:07:35 +0100</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/paas/openshift/</guid>
      <description>Openshift is a Platform as a Service (PaaS) technology from Redhat based on Docker and Kubernetes.
Openshift provides the ability to orchistrate docker containers, providing request routing, health checks and automated scaling amongst other things.
Architecture Openshift is made up of multiple components that together orchestrate containers and allow them to talk to one another. There are multiple PaaS&amp;rsquo; deployed within the bank each with it&amp;rsquo;s own purpose.
   PaaS Name Purpose     Non Production This PaaS is used for running the non production workloads, this will be where development and test purposes are deployed.</description>
    </item>
    
    <item>
      <title>Platform Engineering Background</title>
      <link>https://gwtharg.github.io/28mm/paas/pe_background/</link>
      <pubDate>Mon, 13 Apr 2020 17:36:16 +0100</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/paas/pe_background/</guid>
      <description>This is an embedded html page   &amp;nbsp;
Some Background When the Platform Engineering team was formed there were a number of different processes in place for requesting work from the team. These included:
Process/MethodType of requestREAP Process / EPM
Planned project requests - Low detail and uncertain timingsEmailsUnplanned requests
Service Requests
Incidents
OCSMS Teams / HipchatWalkupService NowService Requests
Incident Records
Problem Records
JiraPlanned Requests
Unplanned Requests
Incidents</description>
    </item>
    
    <item>
      <title>Branching and Merging Strategy</title>
      <link>https://gwtharg.github.io/28mm/git/branchingstrategy/</link>
      <pubDate>Tue, 07 Apr 2020 13:07:35 +0100</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/git/branchingstrategy/</guid>
      <description>Most development is done on the internal Github but some code is shared with the external Bitbucket. In order to support this we have the same repo pushed to both GitHub and BitBucket.
It is best to consider GitHub and BitBucket as simply copies of the same git repository. There is no merging between GitHub and BitBucket, merging is done at the branch level and the same commit history is pushed to both systems.</description>
    </item>
    
    <item>
      <title>Markdown Notes</title>
      <link>https://gwtharg.github.io/28mm/site_documentation/markdown_notes/</link>
      <pubDate>Tue, 07 Apr 2020 13:07:35 +0100</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/site_documentation/markdown_notes/</guid>
      <description>Tables You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe |:
so this
 First Header | Second Header ------------ | ------------- Content from cell 1 | Content from cell 2 Content in the first column | Content in the second column Renders as this
   First Header Second Header     Content from cell 1 Content from cell 2   Content in the first column Content in the second column    Headers # H1 ## H2 ### H3 #### H4 ##### H5 ###### H6 H1 H2 H3 H4 H5 H6 Emphasis, aka italics, with asterisks or underscores.</description>
    </item>
    
    <item>
      <title>Shortcodes</title>
      <link>https://gwtharg.github.io/28mm/site_documentation/shortcode_test/</link>
      <pubDate>Thu, 30 Apr 2020 13:02:34 +0100</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/site_documentation/shortcode_test/</guid>
      <description>Due to some restrictions in displaying the rendered code please note that in the code snippets we show there is no leading or training spaces between the {{ and the &amp;lt; or % as shown in some of the descriptions.
 highlighting with shortcodes  {{&amp;lt; highlight go &amp;gt;}} Code to highlight here. {{&amp;lt; /highlight &amp;gt;}}
 Code to highlight here. button shortcode creates a button Changing the href to an external link works too.</description>
    </item>
    
    <item>
      <title>Flowcharts Notes</title>
      <link>https://gwtharg.github.io/28mm/site_documentation/flowcharts/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/site_documentation/flowcharts/</guid>
      <description>Here are some mermaid diagrams using shortcodes {{ &amp;lt; mermaid &amp;gt;}} graph LR; A[Hard edge] --&amp;gt;|Link text| B(Round edge) B --&amp;gt; C{Decision} C --&amp;gt;|One| D[Result one] C --&amp;gt;|Two| E[Result two] {{ &amp;lt; /mermaid &amp;gt;}}  graph LR; A[Hard edge] --|Link text| B(Round edge) B -- C{Decision} C --|One| D[Result one] C --|Two| E[Result two]  Gantt Diagrams {{ &amp;lt; mermaid &amp;gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2020-01-06,2020-01-08 Active task :active, des2, 2020-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2020-01-06,24h Implement parser and json :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{ &amp;lt; /mermaid &amp;gt;}}  gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2020-01-06,2020-01-08 Active task :active, des2, 2020-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2020-01-06,24h Implement parser and json :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d  Class Diagrams {{ &amp;lt; mermaid &amp;gt;}} classDiagram Class01 &amp;lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .</description>
    </item>
    
    <item>
      <title>Semantic Version Enforcement</title>
      <link>https://gwtharg.github.io/28mm/git/semanticversionenforcement/</link>
      <pubDate>Mon, 20 Apr 2020 10:50:16 +0100</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/git/semanticversionenforcement/</guid>
      <description>Going forward the commit comment format will be enforced in GitHub, to allow semantic versioning of the builds. This is a basic development discipline to allow control and automation of code delivery.
This enforcement will be rolled out sympathetically to all GitHub repositories, so as not to interfere with the in flight releases.
This change consists off the format of the commit comments, from which the semantic version is derived and set of scripts to enforce and help with commits.</description>
    </item>
    
    <item>
      <title>HTML Embedded  Pages</title>
      <link>https://gwtharg.github.io/28mm/site_documentation/html_based_pages/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/site_documentation/html_based_pages/</guid>
      <description>Trying colours You need to do this in html as markdown does not use colours by default.
 Some Markdown text with Simple blue coloured text.
Back to normal text. Now we can highlight in red this is red.
 Below is the html for the colours    Some Markdown text with &amp;#x3C;span style=&amp;#x22;color:blue&amp;#x22;&amp;#x3E; Simple &amp;#x3C;b&amp;#x3E;blue&amp;#x3C;/b&amp;#x3E; coloured text.&amp;#x3C;br&amp;#x3E; &amp;#x3C;/span&amp;#x3E;Back to normal text. Now we can highlight in &amp;#x3C;span style=&amp;#x22;color:red&amp;#x22;&amp;#x3E; &amp;#x3C;b&amp;#x3E;red&amp;#x3C;/b&amp;#x3E; this is red.</description>
    </item>
    
    <item>
      <title>PDF in HTML</title>
      <link>https://gwtharg.github.io/28mm/site_documentation/pdf_in_html/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/site_documentation/pdf_in_html/</guid>
      <description>date: 2020-04-28T12:04:57+01:00 The html snippet is between our rawhtml shortcode.
 {{ &amp;lt; rawhtml &amp;gt; }} html here {{ &amp;lt; /rawhtml &amp;gt; }}
   This is embedded html in a markdown file  The href is from localhost in this test   &amp;#x3C;object data=&amp;#x22;/28mm/site_documentation/image/twd.pdf&amp;#x22; type=&amp;#x22;application/pdf&amp;#x22; width=&amp;#x22;800px&amp;#x22; height=&amp;#x22;834px&amp;#x22;&amp;#x3E; &amp;#x3C;embed src=&amp;#x22;/28mm/site_documentation/image/twd.pdf&amp;#x22;&amp;#x3E; &amp;#x3C;p&amp;#x3E;This browser does not support PDFs. Please download the PDF to view it: &amp;#x3C;a href=&amp;#x22;http://localhost/28mm/site_documentation/image/twd.pdf&amp;#x22;&amp;#x3E;Download PDF&amp;#x3C;/a&amp;#x3E;.&amp;#x3C;/p&amp;#x3E; &amp;#x3C;/embed&amp;#x3E; &amp;#x3C;/object&amp;#x3E;   This browser does not support PDFs.</description>
    </item>
    
    <item>
      <title>Visio from Export</title>
      <link>https://gwtharg.github.io/28mm/site_documentation/visio_from_export/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/site_documentation/visio_from_export/</guid>
      <description>This is a jpg export from Visio This is a png export from Visio  Using the rawhtml shortcode to embedded html   This is a Visio Drawing exported as a PDF  There is more user control over this type of file   &amp;#x3C;object data=&amp;#x22;/28mm/site_documentation/image/rts_pdf.pdf&amp;#x22; type=&amp;#x22;application/pdf&amp;#x22; width=&amp;#x22;800px&amp;#x22; height=&amp;#x22;834px&amp;#x22;&amp;#x3E; &amp;#x3C;embed src=&amp;#x22;/28mm/site_documentation/image/rts_pdf.pdf&amp;#x22;&amp;#x3E; &amp;#x3C;p&amp;#x3E;This browser does not support PDFs. Please download the PDF to view it: &amp;#x3C;a href=&amp;#x22;http://localhost/28mm/site_documentation/image/rts_pdf.pdf&amp;#x22;&amp;#x3E;Download PDF&amp;#x3C;/a&amp;#x3E;.&amp;#x3C;/p&amp;#x3E; &amp;#x3C;/embed&amp;#x3E; &amp;#x3C;/object&amp;#x3E;   This browser does not support PDFs.</description>
    </item>
    
    <item>
      <title>Team Types</title>
      <link>https://gwtharg.github.io/28mm/tfs/team_types/</link>
      <pubDate>Tue, 07 Apr 2020 13:07:35 +0100</pubDate>
      
      <guid>https://gwtharg.github.io/28mm/tfs/team_types/</guid>
      <description>Test snippet from document Aim of the Document This document is an attempt to guide TFS administrators through the process required to create a more complex hierarchical structure under the VM project folder.
We will run through an example using the IIB Technical Team to guide you through the process.
Initial Considerations Most importantly is that we have had a discussion with the users to understand what it they wish to achieve.</description>
    </item>
    
  </channel>
</rss>